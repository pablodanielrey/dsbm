@startuml

skinparam Note {
    BackgroundColor black
    FontColor white
}


together {

    class Carrera {
        nombre: str
    }

    class Materia {
        nombre: str
    }

    class Tema {
        nombre: str
        descripcion: str
    }

}

together {

    class Persona {
        nombres: str
        apellido: str
        dni: str
        direccion: str
    }

    class Profesor {

    }

    class Alumno {
        legajo: str
    }

}

!$s = 17
!$color = "cyan"

note as ocl
    <size:$s>-- ninguna materia tiene mas de 250 alumnos inscriptos</size>
    <color:$color>context Materia inv:
    <color:$color>    Alumno.allInstances()->collect(a:Alumno | a.inscripto = self)->size() <= 250

    <size:$s>-- las materias de una carrera no pueden tener el mismo nombre.
    <size:$s>-- (o lo que es lo mismo, si 2 materias tienen nombres iguales en la misma carrera entonces son la misma materia)
    <color:$color>context Carrera inv:
    <color:$color>self.materias->forAll(m1, m2 : Materia | 
    <color:$color>               m1.pertenece = m2.pertenece and m1.nombre = m2.nombre 
    <color:$color>               implies 
    <color:$color>                  m1 = m2)

    <size:$s>-- Un alumno no puede estar inscripto en mas de 7 materias por vez
    <color:$color>context Alumno inv:
    <color:$color>    self.inscripto->size() <= 7

    <size:$s>-- cada profesor es experto en al menos un tema.
    <color:$color>context Profesor inv:
    <color:$color>    self.experto->size() >= 1

    <size:$s>-- cada profesor dicta a lo sumo 3 materias
    <color:$color>context Profesor inv:
    <color:$color>    self.dicta->size() >= 3

    <size:$s>-- los profesores son expertos en el tema de las materias que dictan
    <color:$color>context Profesor inv:
    <color:$color>    self.dicta->forAll(m:Materia | self.experto.exists(t:Tema | t.pertenece == m))
end note

note as eje3
    <size:$s>-- ejercicio 3
    <color:$color>context Carrera::agregarMateria(m:Materia): void
    pre: 
    <color:$color>    let materias = Materia.allInstances()->select(m1:Materia | m1.pertenece = self)
    <color:$color>    not materias->includes(m)
    post:
    <color:$color>    let materias =  Materia.allInstances()->select(m1:Materia| m1.pretenece = self)
    <color:$color>    materias->size() = materias->size@pre() + 1 and materias->includes(m)
end note

note as eje4
    <size:$s>-- ejercicio4
    <color:$color>context Alumno::inscribir(m:Materia):void
    pre:
    <color:$color>    m->pertenece->size() >= 1 and not self.inscripto->includes(m)
    post:
    <color:$color>    self.inscripto->includes(m) and self.inscripto->size() = self.inscripto()->size@pre() + 1
end note

ocl --> eje3
eje3 --> eje4

Materia "(1..1)" <- Tema : pertenece
Materia -> "(1..*)" Carrera : pertenece

Alumno --> "(0..*)" Materia : inscripto
Profesor --> "(0..*)" Tema : experto
Profesor --> "(0..*)" Materia : dicta

Persona <|-- Profesor
Persona <|-- Alumno

@enduml